version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: gustavo
      POSTGRES_PASSWORD: 1234567
      POSTGRES_DB: booksdb
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  loki:
    image: grafana/loki:main
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    networks:
      - observability
      - application
    ports:
      - "3100:3100"
  prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - application
      - observability
  tempo:
    image: grafana/tempo:2.2.2
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./monitoring/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"
      - "9411:9411"
    networks:
      - observability
      - application
  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      - observability
networks:
  application:
    driver: bridge
  observability:
    driver: bridge
  postgres:
    driver: bridge
volumes:
  postgres: